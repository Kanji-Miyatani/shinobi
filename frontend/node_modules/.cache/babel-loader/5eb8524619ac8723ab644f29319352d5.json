{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k-miyatani\\\\Pub\\\\NEETsInCompanyWeb\\\\frontend\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport io from 'socket.io-client';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport DressInput from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport AvatarIcon from '../components/AvatorIcon';\nimport Slider from '@mui/material/Slider';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport store from '../store/store.js';\nimport AvatorIcon from './AvatorIcon';\nimport '../style/ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatRoom() {\n  _s();\n\n  const [messageList, setMessageList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [transparent, setTransparent] = useState(0.9);\n  const [flagShowChat, setFlagShowChat] = useState(false);\n  const socketref = useRef();\n\n  const handleChange = (event, newValue) => {\n    setTransparent(newValue * 0.01);\n  };\n\n  function thisfocus() {\n    document.getElementById('message').focus();\n    setFlagShowChat(true);\n  }\n\n  ;\n  console.log('users');\n  console.log(users);\n\n  function thisblur() {\n    setFlagShowChat(false);\n  }\n\n  ; //送信イベント\n\n  function submitEvent(e) {\n    e.preventDefault();\n\n    if (socketref !== undefined) {\n      //ソケットを通してset_nameイベントを発火する\n      const avator = store.getState().loginInfoReducer.avatorType;\n      const name = store.getState().loginInfoReducer.name;\n      socketref.current.emit('message', {\n        avatorType: avator,\n        name: name,\n        message: message\n      });\n      document.getElementById('message').value = '';\n      setMessage('');\n    }\n  }\n\n  ;\n  useEffect(() => {\n    socketref.current = io();\n    socketref.current.emit('entry', {\n      name: store.getState().loginInfoReducer.name,\n      avatorType: store.getState().loginInfoReducer.avatorType\n    }); //ユーザー取得\n\n    socketref.current.on('users list', users => {\n      setUsers(users);\n    }); //メッセージ取得\n\n    socketref.current.on('receive', msg => {\n      const {\n        message,\n        name,\n        avatorType\n      } = msg;\n      setMessageList(list => [...list, {\n        name: name,\n        message: message,\n        avatorType: avatorType\n      }]);\n    });\n    return () => {\n      socketref.current.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatRoom\",\n    onBlur: () => {\n      thisblur();\n    },\n    onFocus: () => {\n      thisfocus();\n    },\n    onClick: () => {\n      if (!flagShowChat) {\n        thisfocus();\n      }\n    },\n    style: flagShowChat ? {\n      opacity: transparent\n    } : {\n      opacity: '0.18'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avators-row\",\n      children: users.map((user, id) => {\n        console.log('user rendering...');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ChatRoom-header\",\n      id: \"Chat-DispArea\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          width: '100%',\n          bgcolor: 'rgba(255, 255, 255, 0.15)'\n        },\n        children: messageList.slice(messageList.length - 13 < 0 ? 0 : messageList.length - 13).map((value, id) => {\n          const labelId = `checkbox-list-secondary-label-${value}`;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(AvatarIcon, {\n                avatorType: value.avatorType,\n                height: \"36px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `${value.name} > ${value.message}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        submitEvent(e);\n      },\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: '15%'\n        },\n        variant: \"standard\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          size: \"small\",\n          defaultValue: 70,\n          \"aria-label\": \"Small\",\n          valueLabelDisplay: \"auto\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: '70%'\n        },\n        variant: \"standard\",\n        children: /*#__PURE__*/_jsxDEV(DressInput, {\n          label: \"\",\n          variant: \"standard\",\n          className: \"input--\",\n          autoComplete: \"off\",\n          id: \"message\",\n          type: \"text\",\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          width: '15%'\n        },\n        variant: \"standard\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          type: \"submit\",\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatRoom, \"ER7tDk+vJsP4nPoEIkRWFvgyqr0=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/k-miyatani/Pub/NEETsInCompanyWeb/frontend/src/components/ChatRoom.js"],"names":["io","useState","useEffect","useRef","useSelector","DressInput","FormControl","AvatarIcon","Slider","Button","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Checkbox","Avatar","store","AvatorIcon","ChatRoom","messageList","setMessageList","message","setMessage","users","setUsers","transparent","setTransparent","flagShowChat","setFlagShowChat","socketref","handleChange","event","newValue","thisfocus","document","getElementById","focus","console","log","thisblur","submitEvent","e","preventDefault","undefined","avator","getState","loginInfoReducer","avatorType","name","current","emit","value","on","msg","list","disconnect","opacity","map","user","id","width","bgcolor","slice","length","labelId","m","target"],"mappings":"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","sourcesContent":["import io from 'socket.io-client';\r\nimport { useState ,useEffect,useRef} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DressInput from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport AvatarIcon from '../components/AvatorIcon';\r\nimport Slider from '@mui/material/Slider';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport store from '../store/store.js';\r\nimport AvatorIcon from './AvatorIcon';\r\nimport '../style/ChatRoom.css'\r\nfunction ChatRoom() {\r\n    const [messageList,setMessageList] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [transparent, setTransparent] = useState(0.9);\r\n    const [flagShowChat, setFlagShowChat] = useState(false);\r\n    const socketref = useRef();\r\n    const handleChange = (event, newValue) => {\r\n      setTransparent(newValue*0.01);\r\n    };\r\n    function thisfocus(){\r\n        document.getElementById('message').focus();\r\n        setFlagShowChat(true);\r\n    };\r\n    console.log('users');\r\n    console.log(users);\r\n    function thisblur(){\r\n        setFlagShowChat(false);\r\n    };\r\n    //送信イベント\r\n    function submitEvent(e){\r\n        e.preventDefault();\r\n      if (socketref !== undefined){\r\n        //ソケットを通してset_nameイベントを発火する\r\n        const avator = store.getState().loginInfoReducer.avatorType;\r\n        const name = store.getState().loginInfoReducer.name;\r\n        socketref.current.emit('message',{avatorType:avator,name:name,message:message});\r\n        document.getElementById('message').value='';\r\n        setMessage('');\r\n      }\r\n    };\r\n    useEffect(()=>{\r\n        socketref.current=io();\r\n        socketref.current.emit('entry', {\r\n          name:store.getState().loginInfoReducer.name,\r\n          avatorType:store.getState().loginInfoReducer.avatorType,\r\n        });\r\n        //ユーザー取得\r\n        socketref.current.on('users list',(users)=>{\r\n            setUsers(users);\r\n        })\r\n        //メッセージ取得\r\n        socketref.current.on('receive',(msg)=>{\r\n            const {message,name,avatorType} = msg;\r\n                setMessageList(list=>[...list, {\r\n                    name:name,\r\n                    message:message,\r\n                    avatorType:avatorType\r\n                }]);\r\n        });\r\n        return ()=>{socketref.current.disconnect()};\r\n    },[]);\r\n \r\n  return (\r\n    <div className=\"ChatRoom\" \r\n    onBlur={()=>{thisblur()}}\r\n    onFocus={()=>{thisfocus()}} \r\n    onClick={()=>{if(!flagShowChat){\r\n      thisfocus()\r\n    }}} style={flagShowChat?{opacity:transparent}:{opacity:'0.18'}}>\r\n       <div className=\"avators-row\">\r\n        {\r\n            users.map((user,id)=>{\r\n              console.log('user rendering...');\r\n              return(\r\n              <div>\r\n                {user.name}\r\n              </div>)\r\n            })\r\n          }\r\n      </div>\r\n      <header className=\"ChatRoom-header\" id=\"Chat-DispArea\">\r\n       <List dense sx={{ width: '100%', bgcolor:'rgba(255, 255, 255, 0.15)' }}>\r\n      {messageList.slice(messageList.length-13<0?0:messageList.length-13).map((value,id) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem\r\n            key={id}>\r\n            <ListItemAvatar>\r\n             <AvatarIcon avatorType={value.avatorType} height=\"36px\" />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={`${value.name} > ${value.message}`}  />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n    </header>\r\n    <form onSubmit={(e)=>{submitEvent(e);}} autoComplete=\"off\">\r\n         <FormControl sx={{ m: 1, width: '15%' }}  variant=\"standard\">\r\n          <Slider\r\n            size=\"small\"\r\n            defaultValue={70}\r\n            aria-label=\"Small\"\r\n            valueLabelDisplay=\"auto\"\r\n            onChange={handleChange}\r\n          />\r\n         \r\n         </FormControl>\r\n         <FormControl sx={{ m: 1, width: '70%' }}  variant=\"standard\">\r\n           <DressInput label=\"\" variant=\"standard\" className=\"input--\" autoComplete=\"off\" id=\"message\" type=\"text\" onChange={e => setMessage(e.target.value)} /> \r\n         </FormControl>\r\n         <FormControl sx={{ m: 1, width: '15%' }}  variant=\"standard\">\r\n          <Button variant=\"outlined\" type=\"submit\">送信\r\n          </Button>\r\n         </FormControl>\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}