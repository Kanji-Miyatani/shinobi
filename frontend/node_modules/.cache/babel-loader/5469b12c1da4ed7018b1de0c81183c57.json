{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k-miyatani\\\\Pub\\\\NEETsInCompanyWeb\\\\frontend\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport io from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport DressInput from '@mui/material/TextField';\nimport AvatarIcon from '../components/AvatorIcon';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport store from '../store/store.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatRoom() {\n  _s();\n\n  const [messageList, setMessageList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [socketio, setSocket] = useState();\n  const [avatorType, setAvatorType] = useState();\n  console.log(`messagesInRender:${messageList.map(mes => mes)}`);\n\n  function submitEvent() {\n    if (socketio !== undefined) {\n      //ソケットを通してset_nameイベントを発火する\n      const avator = store.getState().loginInfoReducer.avatorType;\n      console.log(`アバター:${avator}`);\n      socketio.emit('message', {\n        avatorType: avator,\n        name: name,\n        message: message\n      });\n    }\n  }\n\n  ;\n  useEffect(() => {\n    const socketio = io('http://192.168.0.160:8000');\n    setSocket(socketio);\n    socketio.on('message', msg => {\n      console.log(msg);\n      setMessageList([...messageList, msg]);\n      console.log(`messages:${messageList.toString()}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatRoom\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ChatRoom-header\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          width: '100%',\n          maxWidth: 260,\n          bgcolor: 'rgba(255, 255, 255, 0.1)'\n        },\n        children: messageList.map(value => {\n          const labelId = `checkbox-list-secondary-label-${value}`;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(AvatarIcon, {\n                avatorType: value.avatorType,\n                height: \"30px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: value.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(DressInput, {\n        label: \"\",\n        variant: \"standard\",\n        className: \"input--\",\n        type: \"text\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        type: \"button\",\n        onClick: () => {\n          submitEvent();\n        },\n        children: \"\\u5165\\u5BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatRoom, \"RMTK77iQC24N3r6PQr47AK7CIOM=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/k-miyatani/Pub/NEETsInCompanyWeb/frontend/src/components/ChatRoom.js"],"names":["io","useState","useEffect","DressInput","AvatarIcon","Button","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Checkbox","Avatar","store","ChatRoom","messageList","setMessageList","message","setMessage","socketio","setSocket","avatorType","setAvatorType","console","log","map","mes","submitEvent","undefined","avator","getState","loginInfoReducer","emit","name","on","msg","toString","width","maxWidth","bgcolor","value","labelId","e","target"],"mappings":"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","sourcesContent":["import io from 'socket.io-client';\r\nimport { useState ,useEffect} from 'react'\r\nimport DressInput from '@mui/material/TextField';\r\nimport AvatarIcon from '../components/AvatorIcon';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport store from '../store/store.js';\r\nfunction ChatRoom() {\r\n    const [messageList,setMessageList] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [socketio, setSocket] = useState();\r\n    const [avatorType, setAvatorType] = useState();\r\n    console.log(`messagesInRender:${messageList.map(mes=>mes)}`);\r\n    function submitEvent(){\r\n      if (socketio !== undefined){\r\n        //ソケットを通してset_nameイベントを発火する\r\n        const avator = store.getState().loginInfoReducer.avatorType;\r\n        console.log(`アバター:${avator}`);\r\n        socketio.emit('message',{avatorType:avator,name:name,message:message});\r\n      }\r\n    };\r\n    useEffect(()=>{\r\n      const socketio = io('http://192.168.0.160:8000');\r\n      setSocket(socketio);\r\n      socketio.on('message',(msg)=>{\r\n        console.log(msg);\r\n        setMessageList([...messageList,msg]);\r\n        console.log(`messages:${messageList.toString()}`)\r\n      });\r\n    },[]);\r\n \r\n  return (\r\n    <div className=\"ChatRoom\">\r\n      <header className=\"ChatRoom-header\">\r\n       <List dense sx={{ width: '100%', maxWidth: 260, bgcolor:'rgba(255, 255, 255, 0.1)' }}>\r\n      {messageList.map((value) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem\r\n            key={value}>\r\n            <ListItemAvatar>\r\n             <AvatarIcon avatorType={value.avatorType} height=\"30px\" />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={value.message}  />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n        <DressInput label=\"\" variant=\"standard\" className=\"input--\" type=\"text\" onChange={e => setMessage(e.target.value)} />\r\n        <Button variant=\"outlined\" type=\"button\" onClick={()=>{submitEvent();}}>入室\r\n        </Button>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}