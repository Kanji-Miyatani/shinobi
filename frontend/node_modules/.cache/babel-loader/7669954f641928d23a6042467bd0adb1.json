{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k-miyatani\\\\Pub\\\\NEETsInCompanyWeb\\\\frontend\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport io from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport DressInput from '@mui/material/TextField';\nimport AvatarIcon from '../components/AvatorIcon';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport store from '../store/store.js';\nimport '../style/ChatRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socketio = io('http://192.168.0.160:8000');\nsocketio.on(\"connection\", () => {\n  console.log(`socket.connectの中身：`);\n  console.log(socketio.connect());\n});\n\nfunction ChatRoom() {\n  _s();\n\n  const [messageList, setMessageList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [flagShowChat, setFlagShowChat] = useState(false);\n\n  function thisfocus() {\n    setFlagShowChat(true);\n  }\n\n  ;\n\n  function thisblur() {\n    setFlagShowChat(false);\n  }\n\n  ;\n\n  function submitEvent(e) {\n    e.preventDefault();\n\n    if (socketio !== undefined) {\n      //ソケットを通してset_nameイベントを発火する\n      const avator = store.getState().loginInfoReducer.avatorType;\n      const name = store.getState().loginInfoReducer.name;\n      socketio.emit('message', {\n        avatorType: avator,\n        name: name,\n        message: message\n      });\n      document.getElementById('message').value = '';\n      setMessage('');\n    }\n  }\n\n  ;\n  useEffect(() => {\n    socketio.on('message', msg => {\n      console.log('めっさーげ');\n      console.log(messageList);\n      const {\n        message,\n        name,\n        avatorType\n      } = msg;\n      setMessageList(messageList => [...messageList, {\n        name: name,\n        message: message,\n        avatorType: avatorType\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatRoom\",\n    onBlur: () => {\n      thisblur();\n    },\n    onFocus: () => {\n      thisfocus();\n    },\n    style: flagShowChat ? {\n      opacity: '1.0'\n    } : {\n      opacity: '0.25'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ChatRoom-header\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        sx: {\n          width: '100%',\n          maxWidth: 260,\n          bgcolor: 'rgba(255, 255, 255, 0.1)'\n        },\n        children: messageList.map((value, id) => {\n          const labelId = `checkbox-list-secondary-label-${value}`;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(AvatarIcon, {\n                avatorType: value.avatorType,\n                height: \"36px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `${value.name} > ${value.message}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          submitEvent(e);\n        },\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(DressInput, {\n          label: \"\",\n          variant: \"standard\",\n          className: \"input--\",\n          autoComplete: \"off\",\n          id: \"message\",\n          type: \"text\",\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          type: \"submit\",\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatRoom, \"Sh+ElWG9ipS+UZF+pzbKr5GOQvg=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/k-miyatani/Pub/NEETsInCompanyWeb/frontend/src/components/ChatRoom.js"],"names":["io","useState","useEffect","useSelector","DressInput","AvatarIcon","Button","List","ListItem","ListItemButton","ListItemText","ListItemAvatar","Checkbox","Avatar","store","socketio","on","console","log","connect","ChatRoom","messageList","setMessageList","message","setMessage","flagShowChat","setFlagShowChat","thisfocus","thisblur","submitEvent","e","preventDefault","undefined","avator","getState","loginInfoReducer","avatorType","name","emit","document","getElementById","value","msg","opacity","width","maxWidth","bgcolor","map","id","labelId","target"],"mappings":"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","sourcesContent":["import io from 'socket.io-client';\r\nimport { useState ,useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DressInput from '@mui/material/TextField';\r\nimport AvatarIcon from '../components/AvatorIcon';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport store from '../store/store.js';\r\nimport '../style/ChatRoom.css'\r\nconst socketio = io('http://192.168.0.160:8000');\r\nsocketio.on(\"connection\", () => {\r\n    console.log(`socket.connectの中身：`);\r\n    console.log(socketio.connect());\r\n});\r\nfunction ChatRoom() {\r\n    const [messageList,setMessageList] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const [flagShowChat, setFlagShowChat] = useState(false);\r\n    function thisfocus(){\r\n        setFlagShowChat(true);\r\n    };\r\n    function thisblur(){\r\n        setFlagShowChat(false);\r\n    };\r\n    \r\n    function submitEvent(e){\r\n        e.preventDefault();\r\n      if (socketio !== undefined){\r\n        //ソケットを通してset_nameイベントを発火する\r\n        const avator = store.getState().loginInfoReducer.avatorType;\r\n        const name = store.getState().loginInfoReducer.name;\r\n        socketio.emit('message',{avatorType:avator,name:name,message:message});\r\n        document.getElementById('message').value='';\r\n        setMessage('');\r\n      }\r\n    };\r\n    useEffect(()=>{\r\n        socketio.on('message',(msg)=>{\r\n            console.log('めっさーげ');\r\n            console.log(messageList);\r\n            const {message,name,avatorType} = msg;\r\n            setMessageList((messageList)=>[...messageList, {\r\n                name:name,\r\n                message:message,\r\n                avatorType:avatorType\r\n            }]);\r\n        });\r\n    },[]);\r\n \r\n  return (\r\n    <div className=\"ChatRoom\" onBlur={()=>{thisblur()}} onFocus={()=>{thisfocus()}} style={flagShowChat?{opacity:'1.0'}:{opacity:'0.25'}}>\r\n      <header className=\"ChatRoom-header\">\r\n       <List dense sx={{ width: '100%', maxWidth: 260, bgcolor:'rgba(255, 255, 255, 0.1)' }}>\r\n      {messageList.map((value,id) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem\r\n            key={id}>\r\n            <ListItemAvatar>\r\n             <AvatarIcon avatorType={value.avatorType} height=\"36px\" />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={`${value.name} > ${value.message}`}  />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n    <form onSubmit={(e)=>{submitEvent(e);}} autoComplete=\"off\">\r\n        <DressInput label=\"\" variant=\"standard\" className=\"input--\" autoComplete=\"off\" id=\"message\" type=\"text\" onChange={e => setMessage(e.target.value)} />\r\n        <Button variant=\"outlined\" type=\"submit\">送信\r\n        </Button>\r\n    </form>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}